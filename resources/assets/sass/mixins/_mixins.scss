@import "~@kickoff/utils.scss/scss/index";
@import "~include-media/dist/include-media";
@import "./../variables";

@mixin island($width, $height) {
    .island__svg {
        pattern, image {
            width: #{$width}px;
            height: #{$height}px;
        }
    }
}

// @include center-block
@mixin center-block() {
    display: block;
    margin: 0 auto;
}

@mixin clearfix() {
    &::after {
        content: '';
        display: table;
        clear: both;
    }
}

// @include font-face(proxima-nova, /css/fonts/proxima-nova, normal, italic, false);
@mixin font-face($family-name, $font-path, $font-weight: normal, $font-style: normal) {
    @font-face {
        font-family: $family-name;
        src: url('#{$font-path}.eot');
        src: url('#{$font-path}.eot?#iefix') format('embedded-opentype'),
        url('#{$font-path}.woff') format('woff'),
        url('#{$font-path}.ttf') format('truetype'),
        url('#{$font-path}.svg##{$family-name}') format('svg');
        font-weight: $font-weight;
        font-style: $font-style;
    }
}

// Input placeholder text
@mixin placeholder($color: lighten(#000, 70%)) {
    :-ms-input-placeholder {
        color: $color;
    }

    :-moz-placeholder {
        color: $color;
    }

    ::-webkit-input-placeholder {
        color: $color;
    }
}

@function z($key) {
    @if map-has-key($z-layers, $key) {
        @return map-get($z-layers, $key);
    }

    @warn "Unknown `#{$key}` in $z-layers.";
    @return null;
}